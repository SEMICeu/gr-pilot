<?xml version="1.0" encoding="utf-8"?>
<!--
  XSLT script to show a detailed view of an org:Organization.
  This script is used in description.vsp.

  Copyright 2014 European Union
  Author: Vianney le ClÃ©ment de Saint-Marcq (PwC EU Services)

  Licensed under the EUPL, Version 1.1 or - as soon they
  will be approved by the European Commission - subsequent
  versions of the EUPL (the "Licence");
  You may not use this work except in compliance with the
  Licence.
  You may obtain a copy of the Licence at:
  http://ec.europa.eu/idabc/eupl

  Unless required by applicable law or agreed to in
  writing, software distributed under the Licence is
  distributed on an "AS IS" basis,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
  express or implied.
  See the Licence for the specific language governing
  permissions and limitations under the Licence.

-->
<xsl:stylesheet version="1.0"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
  xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
  xmlns:org="http://www.w3.org/ns/org#"
  xmlns:rov="http://www.w3.org/ns/regorg#"
  xmlns:locn="http://www.w3.org/ns/locn#"
  xmlns:foaf="http://xmlns.com/foaf/0.1/"
  exclude-result-prefixes="xsl rdf rdfs org rov foaf locn">

  <xsl:include href="%ROOTURI%xslt/include.xsl" />

  <!-- Entry point -->
  <xsl:template match="rdf:RDF">
    <xsl:call-template name="about" />
  </xsl:template>

  <!-- Main template -->
  <xsl:template name="content">
    <h1><xsl:value-of select="$subject-label" /></h1>
    <xsl:choose>
      <xsl:when test="boolean(//org:subOrganizationOf)">
        <div class="grid">
          <div class="unit half">
            <xsl:call-template name="info" />
          </div>
          <div class="unit half">
            <xsl:call-template name="hierarchy" />
          </div>
        </div>
      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="info" />
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="boolean($subject/locn:address)">
        <div class="grid">
          <div class="unit half">
            <xsl:call-template name="contact" />
          </div>
          <div class="unit half">
            <xsl:call-template name="map" />
          </div>
        </div>
      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="contact" />
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- General information -->
  <xsl:template name="info">
    <xsl:call-template name="rdf-info" />
    <section id="info">
      <dl class="properties">
        <xsl:if test="$subject/org:identifier">
          <dt>VAT number</dt>
          <dd><xsl:value-of select="$subject/org:identifier" /></dd>
        </xsl:if>
        <xsl:if test="$subject/rov:orgType">
          <dt>Org. type</dt>
          <dd>
            <xsl:call-template name="rdf-value">
              <xsl:with-param name="element" select="$subject/rov:orgType" />
              <xsl:with-param name="strip-uri" select="true()" />
            </xsl:call-template>
          </dd>
        </xsl:if>
        <xsl:if test="$subject/org:classification">
          <dt>Category</dt>
          <dd>
            <xsl:call-template name="rdf-value">
              <xsl:with-param name="element" select="$subject/org:classification" />
              <xsl:with-param name="strip-uri" select="true()" />
            </xsl:call-template>
          </dd>
        </xsl:if>
      </dl>
    </section>
  </xsl:template>

  <!-- Hierarchy -->
  <xsl:template name="hierarchy">
    <xsl:variable name="parent" select="$subject/org:subOrganizationOf" />
    <section id="hierarchy">
      <ul class="hierarchy">
        <xsl:choose>
          <xsl:when test="boolean($parent)">
            <li>
              <div class="item">
                <xsl:call-template name="rdf-value">
                  <xsl:with-param name="element" select="$parent" />
                </xsl:call-template>
              </div>
              <ul>
                <xsl:call-template name="hierarchy-self-and-children" />
              </ul>
            </li>
          </xsl:when>
          <xsl:otherwise>
            <xsl:call-template name="hierarchy-self-and-children" />
          </xsl:otherwise>
        </xsl:choose>
      </ul>
    </section>
  </xsl:template>
  <xsl:template name="hierarchy-self-and-children">
    <xsl:variable name="children" select="//rdf:Description[.!=$subject][org:subOrganizationOf]" />
    <li>
      <div class="item current">
        <xsl:value-of select="$subject-label" />
      </div>
      <xsl:if test="boolean($children)">
        <ul>
          <xsl:for-each select="$children">
            <li>
              <div class="item">
                <xsl:call-template name="rdf-value">
                  <xsl:with-param name="element" select="." />
                </xsl:call-template>
              </div>
            </li>
          </xsl:for-each>
        </ul>
      </xsl:if>
    </li>
  </xsl:template>

  <!-- Contact information (address, phone number) -->
  <xsl:template name="contact">
    <xsl:if test="boolean($subject/locn:address)">
      <section id="locations">
        <h2>Locations</h2>
        <ul>
          <xsl:for-each select="$subject/locn:address">
            <li>
              <xsl:call-template name="rdf-value">
                <xsl:with-param name="element" select="." />
              </xsl:call-template>
            </li>
          </xsl:for-each>
        </ul>
      </section>
    </xsl:if>
    <xsl:if test="boolean($subject/foaf:phone)">
      <section id="phones">
        <h2>Phone numbers</h2>
        <ul>
          <xsl:for-each select="$subject/foaf:phone">
            <li>
              <!-- All phone number are <tel:+...> URIs. -->
              <xsl:value-of select="substring(string(@rdf:resource), 5)" />
            </li>
          </xsl:for-each>
        </ul>
      </section>
    </xsl:if>
  </xsl:template>

  <!-- Map of addresses -->
  <xsl:template name="map">
    <section>
      <h2>Map</h2>
      <div id="map">
        <xsl:for-each select="$subject/locn:address">
          <xsl:variable name="uri" select="string(@rdf:resource)" />
          <xsl:call-template name="map-address">
            <xsl:with-param name="address" select="//rdf:Description[@rdf:about=$uri]" />
          </xsl:call-template>
        </xsl:for-each>
      </div>
    </section>
  </xsl:template>

</xsl:stylesheet>
<!-- vim:set ts=2 sw=2 et: -->
