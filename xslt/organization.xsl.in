<?xml version="1.0" encoding="utf-8"?>
<!--
  XSLT script to show a detailed view of a rov:RegisteredOrganization

  Copyright 2014 European Union

  Licensed under the EUPL, Version 1.1 or - as soon they
  will be approved by the European Commission - subsequent
  versions of the EUPL (the "Licence");
  You may not use this work except in compliance with the
  Licence.
  You may obtain a copy of the Licence at:
  http://ec.europa.eu/idabc/eupl

  Unless required by applicable law or agreed to in
  writing, software distributed under the Licence is
  distributed on an "AS IS" basis,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
  express or implied.
  See the Licence for the specific language governing
  permissions and limitations under the Licence.


  This script is meant to be applied to the results of the following SPARQL
  query (in application/sparql-results+xml format), where <$s1> is the target
  resource URI.

  CONSTRUCT {
    <$s1> a rov:RegisteredOrganization ;
      rdfs:label ?label ;
      org:identifier ?identifier ;
      rov:orgType ?type ;
      org:classification ?category ;
      org:subOrganizationOf ?parent ;
      locn:address ?address ;
      foaf:phone ?phone .
    ?type rdfs:label ?typelabel .
    ?category rdfs:label ?categorylabel .
    ?parent rdfs:label ?parentlabel .
    ?child org:subOrganizationOf <$s1> ;
      rdfs:label ?childlabel .
    ?address a locn:Address ;
      rdfs:label ?addrlabel ;
      locn:thoroughfare ?street ;
      locn:locatorDesignator ?number ;
      locn:postCode ?postcode ;
      locn:adminUnitL2 ?municipality ;
      locn:adminUnitL1 ?country .
  } WHERE {
    {
      <$s1> a rov:RegisteredOrganization ;
        rdfs:label ?label ;
        org:identifier ?identifier .
      OPTIONAL { <$s1> rov:orgType ?type .
                 ?type rdfs:label ?typelabel . }
      OPTIONAL { <$s1> org:classification ?category .
                 ?category rdfs:label ?categorylabel . }
      OPTIONAL { <$s1> org:subOrganizationOf ?parent .
                 ?parent rdfs:label ?parentlabel . }
    } UNION {
      { SELECT * WHERE {
          ?child org:subOrganizationOf <$s1> ;
            rdfs:label ?childlabel .
        } LIMIT 11 }
    } UNION {
      { SELECT * WHERE {
          <$s1> locn:address ?address .
          ?address a locn:Address ;
            rdfs:label ?addrlabel .
          OPTIONAL { ?address locn:thoroughfare ?street }
          OPTIONAL { ?address locn:locatorDesignator ?number }
          OPTIONAL { ?address locn:postCode ?postcode }
          OPTIONAL { ?address locn:adminUnitL2 ?municipality }
          OPTIONAL { ?address locn:adminUnitL1 ?country }
        } LIMIT 11 }
    } UNION {
      { SELECT * WHERE {
          <$s1> foaf:phone ?phone .
        } LIMIT 11 }
    }
  }

-->
<xsl:stylesheet version="1.0"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
  xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
  xmlns:org="http://www.w3.org/ns/org#"
  xmlns:rov="http://www.w3.org/ns/regorg#"
  xmlns:locn="http://www.w3.org/ns/locn#"
  xmlns:foaf="http://xmlns.com/foaf/0.1/"
  exclude-result-prefixes="xsl rdf rdfs org rov foaf locn">

  <xsl:include href="%ROOTURI%xslt/include.xsl" />

  <xsl:output method="html" indent="yes" encoding="UTF-8" />

  <xsl:variable name="subject" select="//rdf:Description[rdf:type[@rdf:resource = 'http://www.w3.org/ns/regorg#RegisteredOrganization']]" />

  <!-- Root template -->
  <xsl:template match="rdf:RDF">
    <xsl:call-template name="html">
      <xsl:with-param name="title">
        About: <xsl:value-of select="$subject/rdfs:label" />
      </xsl:with-param>
      <xsl:with-param name="leaflet" select="true()" />
      <xsl:with-param name="body">
        <xsl:choose>
          <xsl:when test="$subject">
            <xsl:call-template name="content" />
          </xsl:when>
          <xsl:otherwise>
            <h1>About</h1>
            <div class="error">The organization you are looking for was not found.</div>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:with-param>
    </xsl:call-template>
  </xsl:template>

  <!-- Real content -->
  <xsl:template name="content">
    <h1><xsl:value-of select="$subject/rdfs:label" /></h1>
    <dl class="properties">
      <xsl:if test="$subject/org:identifier">
        <dt>VAT number</dt>
        <dd><xsl:value-of select="$subject/org:identifier" /></dd>
      </xsl:if>
      <xsl:if test="$subject/rov:orgType">
        <dt>Organization type</dt>
        <dd>
          <xsl:call-template name="rdf-link">
            <xsl:with-param name="uri" select="$subject/rov:orgType/@rdf:resource" />
          </xsl:call-template>
        </dd>
      </xsl:if>
      <xsl:if test="$subject/org:classification">
        <dt>Category</dt>
        <dd>
          <xsl:call-template name="rdf-link">
            <xsl:with-param name="uri" select="$subject/org:classification/@rdf:resource" />
          </xsl:call-template>
        </dd>
      </xsl:if>
    </dl>
    <xsl:if test="$subject/org:subOrganizationOf">
      <section id="parents">
        <h2>Parent organizations</h2>
        <ul>
          <xsl:for-each select="$subject/org:subOrganizationOf">
            <li>
              <xsl:call-template name="rdf-link">
                <xsl:with-param name="uri" select="@rdf:resource" />
              </xsl:call-template>
            </li>
          </xsl:for-each>
        </ul>
      </section>
    </xsl:if>
    <xsl:if test="//rdf:Description[.!=$subject]/org:subOrganizationOf">
      <section id="children">
        <h2>Child organizations</h2>
        <ul>
          <xsl:for-each select="//rdf:Description[.!=$subject][org:subOrganizationOf]">
            <li>
              <xsl:call-template name="rdf-link">
                <xsl:with-param name="uri" select="@rdf:about" />
              </xsl:call-template>
            </li>
          </xsl:for-each>
        </ul>
      </section>
    </xsl:if>
    <xsl:if test="$subject/locn:address">
      <section id="addresses">
        <h2>Addresses</h2>
        <ul>
          <xsl:for-each select="$subject/locn:address">
            <li>
              <xsl:call-template name="rdf-link">
                <xsl:with-param name="uri" select="@rdf:resource" />
              </xsl:call-template>
            </li>
          </xsl:for-each>
        </ul>
        <div id="map">
          <xsl:for-each select="$subject/locn:address">
            <xsl:variable name="uri" select="@rdf:resource" />
            <xsl:call-template name="map-address">
              <xsl:with-param name="address" select="//rdf:Description[@rdf:about=$uri]" />
            </xsl:call-template>
          </xsl:for-each>
        </div>
      </section>
    </xsl:if>
    <xsl:if test="$subject/foaf:phone">
      <section id="phone">
        <h2>Phone numbers</h2>
        <ul>
          <xsl:for-each select="$subject/foaf:phone">
            <li>
              <xsl:value-of select="substring(@rdf:resource, 5)" />
            </li>
          </xsl:for-each>
        </ul>
      </section>
    </xsl:if>
  </xsl:template>

</xsl:stylesheet>
<!-- vim:set ts=2 sw=2 et: -->
